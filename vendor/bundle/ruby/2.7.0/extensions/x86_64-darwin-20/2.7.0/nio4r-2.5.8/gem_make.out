current directory: /Users/yuuki_haga/Runteq/real_portfolio/regex-hunting/vendor/bundle/ruby/2.7.0/gems/nio4r-2.5.8/ext/nio4r
/Users/yuuki_haga/.rbenv/versions/2.7.4/bin/ruby -I /Users/yuuki_haga/.rbenv/versions/2.7.4/lib/ruby/2.7.0 -r ./siteconf20211121-88998-1mcf56l.rb extconf.rb
checking for unistd.h... yes
checking for linux/aio_abi.h... no
checking for linux/io_uring.h... no
checking for sys/select.h... yes
checking for port_event_t in poll.h... no
checking for sys/epoll.h... no
checking for sys/event.h... yes
checking for sys/queue.h... yes
checking for port_event_t in port.h... no
checking for sys/resource.h... yes
creating Makefile

current directory: /Users/yuuki_haga/Runteq/real_portfolio/regex-hunting/vendor/bundle/ruby/2.7.0/gems/nio4r-2.5.8/ext/nio4r
make "DESTDIR=" clean

current directory: /Users/yuuki_haga/Runteq/real_portfolio/regex-hunting/vendor/bundle/ruby/2.7.0/gems/nio4r-2.5.8/ext/nio4r
make "DESTDIR="
compiling bytebuffer.c
compiling monitor.c
monitor.c:90:25: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:90:25: note: '{' token is here
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:90:25: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:90:25: note: ')' token is here
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:92:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:92:32: note: '{' token is here
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:92:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:92:32: note: ')' token is here
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:94:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:94:32: note: '{' token is here
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:94:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:94:32: note: ')' token is here
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:97:116: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:97:116: note: '{' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:97:116: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:97:116: note: ')' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:97:116: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: note: '{' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: note: ')' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: note: '{' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: note: ')' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:103:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("io"), io);
                      ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:103:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("io"), io);
                      ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:103:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("io"), io);
                      ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:103:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("io"), io);
                      ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:104:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("interests"), interests);
                      ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:104:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("interests"), interests);
                      ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:104:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("interests"), interests);
                      ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:104:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("interests"), interests);
                      ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:105:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("selector"), selector_obj);
                      ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:105:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("selector"), selector_obj);
                      ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:105:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("selector"), selector_obj);
                      ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:105:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("selector"), selector_obj);
                      ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:130:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selector = rb_ivar_get(self, rb_intern("selector"));
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:130:34: note: '{' token is here
    selector = rb_ivar_get(self, rb_intern("selector"));
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:130:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selector = rb_ivar_get(self, rb_intern("selector"));
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:130:34: note: ')' token is here
    selector = rb_ivar_get(self, rb_intern("selector"));
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:139:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("selector"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:139:27: note: '{' token is here
        rb_ivar_set(self, rb_intern("selector"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:139:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("selector"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:139:27: note: ')' token is here
        rb_ivar_set(self, rb_intern("selector"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:143:80: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                                                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2686:35: note: expanded from macro 'rb_funcall'
        const VALUE rb_funcall_args[] = {__VA_ARGS__}; \
                                         ^~~~~~~~~~~
monitor.c:143:80: note: '{' token is here
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                                                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2686:35: note: expanded from macro 'rb_funcall'
        const VALUE rb_funcall_args[] = {__VA_ARGS__}; \
                                         ^~~~~~~~~~~
monitor.c:143:80: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                                                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2686:35: note: expanded from macro 'rb_funcall'
        const VALUE rb_funcall_args[] = {__VA_ARGS__}; \
                                         ^~~~~~~~~~~
monitor.c:143:80: note: ')' token is here
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                                                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2686:35: note: expanded from macro 'rb_funcall'
        const VALUE rb_funcall_args[] = {__VA_ARGS__}; \
                                         ^~~~~~~~~~~
monitor.c:143:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                 ^~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
monitor.c:143:34: note: '{' token is here
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                 ^~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
monitor.c:143:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                 ^~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
monitor.c:143:34: note: ')' token is here
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                 ^~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
monitor.c:160:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("io"));
                             ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:160:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("io"));
                             ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:160:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("io"));
                             ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:160:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("io"));
                             ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:165:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:165:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:165:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:165:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:176:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:176:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:176:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:176:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:187:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:187:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:187:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:187:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:198:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:198:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:198:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:198:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:203:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("selector"));
                             ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:203:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("selector"));
                             ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:203:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("selector"));
                             ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:203:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("selector"));
                             ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:208:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("value"));
                             ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:208:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("value"));
                             ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:208:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("value"));
                             ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:208:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("value"));
                             ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:213:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_set(self, rb_intern("value"), obj);
                             ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:213:30: note: '{' token is here
    return rb_ivar_set(self, rb_intern("value"), obj);
                             ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:213:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_set(self, rb_intern("value"), obj);
                             ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:213:30: note: ')' token is here
    return rb_ivar_set(self, rb_intern("value"), obj);
                             ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:222:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("rw"));
                      ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:222:23: note: '{' token is here
        return ID2SYM(rb_intern("rw"));
                      ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:222:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("rw"));
                      ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:222:23: note: ')' token is here
        return ID2SYM(rb_intern("rw"));
                      ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:224:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("r"));
                      ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:224:23: note: '{' token is here
        return ID2SYM(rb_intern("r"));
                      ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:224:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("r"));
                      ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:224:23: note: ')' token is here
        return ID2SYM(rb_intern("r"));
                      ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:226:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("w"));
                      ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:226:23: note: '{' token is here
        return ID2SYM(rb_intern("w"));
                      ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:226:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("w"));
                      ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:226:23: note: ')' token is here
        return ID2SYM(rb_intern("w"));
                      ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:263:25: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:263:25: note: '{' token is here
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:263:25: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:263:25: note: ')' token is here
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:265:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:265:32: note: '{' token is here
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:265:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:265:32: note: ')' token is here
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:267:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:267:32: note: '{' token is here
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:267:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:267:32: note: ')' token is here
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:270:119: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:270:119: note: '{' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:270:119: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:270:119: note: ')' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:270:119: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: note: '{' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: note: ')' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: note: '{' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: note: ')' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:287:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("r");
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:287:32: note: '{' token is here
                interests_id = rb_intern("r");
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:287:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("r");
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:287:32: note: ')' token is here
                interests_id = rb_intern("r");
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:290:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("w");
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:290:32: note: '{' token is here
                interests_id = rb_intern("w");
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:290:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("w");
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:290:32: note: ')' token is here
                interests_id = rb_intern("w");
                               ^~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:293:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("rw");
                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:293:32: note: '{' token is here
                interests_id = rb_intern("rw");
                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:293:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("rw");
                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:293:32: note: ')' token is here
                interests_id = rb_intern("rw");
                               ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:299:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("interests"), ID2SYM(interests_id));
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:299:27: note: '{' token is here
        rb_ivar_set(self, rb_intern("interests"), ID2SYM(interests_id));
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:299:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("interests"), ID2SYM(interests_id));
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:299:27: note: ')' token is here
        rb_ivar_set(self, rb_intern("interests"), ID2SYM(interests_id));
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:301:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("interests"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:301:27: note: '{' token is here
        rb_ivar_set(self, rb_intern("interests"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:301:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("interests"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:301:27: note: ')' token is here
        rb_ivar_set(self, rb_intern("interests"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
70 warnings generated.
compiling nio4r_ext.c
In file included from nio4r_ext.c:6:
./../libev/ev.c:573:48: warning: '/*' within block comment [-Wcomment]
/*#define MIN_INTERVAL  0.00000095367431640625 /* 1/2**20, good till 2200 */
                                               ^
./../libev/ev.c:2136:31: warning: 'extern' variable has an initializer [-Wextern-initializer]
  EV_API_DECL struct ev_loop *ev_default_loop_ptr = 0; /* needs to be initialised to make it a definition despite extern */
                              ^
In file included from nio4r_ext.c:6:
In file included from ./../libev/ev.c:3080:
./../libev/ev_kqueue.c:133:32: warning: expression result unused [-Wunused-value]
                      assert (("libev: kqueue found invalid fd", 0));
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
In file included from ./../libev/ev.c:3080:
./../libev/ev_kqueue.c:139:28: warning: expression result unused [-Wunused-value]
                  assert (("libev: kqueue found invalid fd", 0));
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
In file included from ./../libev/ev.c:3092:
./../libev/ev_poll.c:113:18: warning: expression result unused [-Wunused-value]
        assert (("libev: poll returned illegal result, broken BSD kernel?", p < polls + pollcnt));
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
In file included from ./../libev/ev.c:3092:
./../libev/ev_poll.c:121:26: warning: expression result unused [-Wunused-value]
                assert (("libev: poll found invalid fd in poll set", 0));
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:3568:12: warning: expression result unused [-Wunused-value]
  assert (("libev: watcher has invalid priority", ABSPRI (w) >= 0 && ABSPRI (w) < NUMPRI));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:3571:14: warning: expression result unused [-Wunused-value]
    assert (("libev: pending watcher not on pending queue", pendings [ABSPRI (w)][w->pending - 1].w == w));
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:3582:16: warning: expression result unused [-Wunused-value]
      assert (("libev: active index mismatch in heap", ev_active (ANHE_w (heap [i])) == i));
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:3583:16: warning: expression result unused [-Wunused-value]
      assert (("libev: heap condition violated", i == HEAP0 || ANHE_at (heap [HPARENT (i)]) <= ANHE_at (heap [i])));
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:3584:16: warning: expression result unused [-Wunused-value]
      assert (("libev: heap at cache mismatch", ANHE_at (heap [i]) == ev_at (ANHE_w (heap [i]))));
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:3596:16: warning: expression result unused [-Wunused-value]
      assert (("libev: active index mismatch", ev_active (ws [cnt]) == cnt + 1));
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:3614:14: warning: expression result unused [-Wunused-value]
    assert (("libev: negative fd in fdchanges", fdchanges [i] >= 0));
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:3627:24: warning: expression result unused [-Wunused-value]
              assert (("libev: io watcher list contains a loop", w != w2));
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:3631:20: warning: expression result unused [-Wunused-value]
          assert (("libev: inactive fd watcher on anfd list", ev_active (w) == 1));
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:3632:20: warning: expression result unused [-Wunused-value]
          assert (("libev: fd mismatch between watcher and anfd", ((ev_io *)w)->fd == i));
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:3818:24: warning: expression result unused [-Wunused-value]
              assert (("libev: negative ev_timer repeat value found while processing timers", w->repeat > EV_TS_CONST (0.)));
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:3881:24: warning: expression result unused [-Wunused-value]
              assert (("libev: ev_periodic reschedule callback returned time in the past", ev_at (w) >= ev_rt_now));
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:4043:12: warning: expression result unused [-Wunused-value]
  assert (("libev: ev_loop recursion during release detected", loop_done != EVBREAK_RECURSE));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:4228:22: warning: expression result unused [-Wunused-value]
            assert (("libev: pipe_w not active, but pipe not written", ev_is_active (&pipe_w)));
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:4402:12: warning: expression result unused [-Wunused-value]
  assert (("libev: ev_io_start called with negative fd", fd >= 0));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:4403:12: warning: expression result unused [-Wunused-value]
  assert (("libev: ev_io_start called with illegal event mask", !(w->events & ~(EV__IOFDSET | EV_READ | EV_WRITE))));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:4415:12: warning: expression result unused [-Wunused-value]
  assert (("libev: ev_io_start called with corrupted watcher", ((WL)w)->next != (WL)w));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:4431:12: warning: expression result unused [-Wunused-value]
  assert (("libev: ev_io_stop called with illegal fd (must stay constant after start!)", w->fd >= 0 && w->fd < anfdmax));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:4455:12: warning: expression result unused [-Wunused-value]
  assert (("libev: ev_timer_start called with negative timer repeat value", w->repeat >= 0.));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:4484:14: warning: expression result unused [-Wunused-value]
    assert (("libev: internal timer heap corruption", ANHE_w (timers [active]) == (WT)w));
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:4553:16: warning: expression result unused [-Wunused-value]
      assert (("libev: ev_periodic_start called with negative interval value", w->interval >= 0.));
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:4586:14: warning: expression result unused [-Wunused-value]
    assert (("libev: internal periodic heap corruption", ANHE_w (periodics [active]) == (WT)w));
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:4625:12: warning: expression result unused [-Wunused-value]
  assert (("libev: ev_signal_start called with illegal signal number", w->signum > 0 && w->signum < EV_NSIG));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:4628:12: warning: expression result unused [-Wunused-value]
  assert (("libev: a signal must not be attached to two different loops",
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:4747:12: warning: expression result unused [-Wunused-value]
  assert (("libev: child watchers are only supported in the default loop", loop == ev_default_loop_ptr));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
In file included from nio4r_ext.c:6:
./../libev/ev.c:5334:14: warning: expression result unused [-Wunused-value]
    assert (("libev: loop to be embedded is not embeddable", backend & ev_embeddable_backends ()));
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h:93:25: note: expanded from macro 'assert'
    (__builtin_expect(!(e), 0) ? __assert_rtn(__func__, __FILE__, __LINE__, #e) : (void)0)
                        ^
32 warnings generated.
compiling selector.c
selector.c:167:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("epoll")));
                                   ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:167:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("epoll")));
                                   ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:167:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("epoll")));
                                   ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:167:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("epoll")));
                                   ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:171:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("poll")));
                                   ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:171:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("poll")));
                                   ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:171:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("poll")));
                                   ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:171:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("poll")));
                                   ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:175:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("kqueue")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:175:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("kqueue")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:175:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("kqueue")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:175:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("kqueue")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:179:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("select")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:179:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("select")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:179:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("select")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:179:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("select")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:183:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("port")));
                                   ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:183:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("port")));
                                   ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:183:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("port")));
                                   ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:183:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("port")));
                                   ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:187:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("linuxaio")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:187:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("linuxaio")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:187:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("linuxaio")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:187:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("linuxaio")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:191:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("io_uring")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:191:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("io_uring")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:191:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("io_uring")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:191:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("io_uring")));
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:214:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:214:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:214:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:214:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:214:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:214:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:219:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        if (backend_id == rb_intern("epoll")) {
                          ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:219:27: note: '{' token is here
        if (backend_id == rb_intern("epoll")) {
                          ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:219:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        if (backend_id == rb_intern("epoll")) {
                          ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:219:27: note: ')' token is here
        if (backend_id == rb_intern("epoll")) {
                          ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:221:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("poll")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:221:34: note: '{' token is here
        } else if (backend_id == rb_intern("poll")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:221:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("poll")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:221:34: note: ')' token is here
        } else if (backend_id == rb_intern("poll")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:223:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("kqueue")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:223:34: note: '{' token is here
        } else if (backend_id == rb_intern("kqueue")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:223:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("kqueue")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:223:34: note: ')' token is here
        } else if (backend_id == rb_intern("kqueue")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:225:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("select")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:225:34: note: '{' token is here
        } else if (backend_id == rb_intern("select")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:225:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("select")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:225:34: note: ')' token is here
        } else if (backend_id == rb_intern("select")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:227:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("port")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:227:34: note: '{' token is here
        } else if (backend_id == rb_intern("port")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:227:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("port")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:227:34: note: ')' token is here
        } else if (backend_id == rb_intern("port")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:229:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("linuxaio")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:229:34: note: '{' token is here
        } else if (backend_id == rb_intern("linuxaio")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:229:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("linuxaio")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:229:34: note: ')' token is here
        } else if (backend_id == rb_intern("linuxaio")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:231:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("io_uring")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:231:34: note: '{' token is here
        } else if (backend_id == rb_intern("io_uring")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:231:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("io_uring")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:231:34: note: ')' token is here
        } else if (backend_id == rb_intern("io_uring")) {
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:234:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:234:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:234:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:234:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1010:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1267:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:234:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1011:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:234:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1012:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1271:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:248:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("selectables"), rb_hash_new());
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:248:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("selectables"), rb_hash_new());
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:248:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("selectables"), rb_hash_new());
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:248:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("selectables"), rb_hash_new());
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:249:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:249:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:249:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:249:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:251:65: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock = rb_class_new_instance(0, 0, rb_const_get(rb_cObject, rb_intern("Mutex")));
                                                                ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:251:65: note: '{' token is here
    lock = rb_class_new_instance(0, 0, rb_const_get(rb_cObject, rb_intern("Mutex")));
                                                                ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:251:65: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock = rb_class_new_instance(0, 0, rb_const_get(rb_cObject, rb_intern("Mutex")));
                                                                ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:251:65: note: ')' token is here
    lock = rb_class_new_instance(0, 0, rb_const_get(rb_cObject, rb_intern("Mutex")));
                                                                ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:252:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock"), lock);
                      ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:252:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("lock"), lock);
                      ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:252:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock"), lock);
                      ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:252:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("lock"), lock);
                      ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:253:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:253:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:253:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:253:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:269:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("epoll"));
                          ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:269:27: note: '{' token is here
            return ID2SYM(rb_intern("epoll"));
                          ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:269:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("epoll"));
                          ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:269:27: note: ')' token is here
            return ID2SYM(rb_intern("epoll"));
                          ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:271:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("poll"));
                          ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:271:27: note: '{' token is here
            return ID2SYM(rb_intern("poll"));
                          ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:271:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("poll"));
                          ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:271:27: note: ')' token is here
            return ID2SYM(rb_intern("poll"));
                          ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:273:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("kqueue"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:273:27: note: '{' token is here
            return ID2SYM(rb_intern("kqueue"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:273:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("kqueue"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:273:27: note: ')' token is here
            return ID2SYM(rb_intern("kqueue"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:275:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("select"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:275:27: note: '{' token is here
            return ID2SYM(rb_intern("select"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:275:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("select"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:275:27: note: ')' token is here
            return ID2SYM(rb_intern("select"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:277:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("port"));
                          ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:277:27: note: '{' token is here
            return ID2SYM(rb_intern("port"));
                          ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:277:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("port"));
                          ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:277:27: note: ')' token is here
            return ID2SYM(rb_intern("port"));
                          ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:279:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("linuxaio"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:279:27: note: '{' token is here
            return ID2SYM(rb_intern("linuxaio"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:279:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("linuxaio"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:279:27: note: ')' token is here
            return ID2SYM(rb_intern("linuxaio"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:281:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("io_uring"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:281:27: note: '{' token is here
            return ID2SYM(rb_intern("io_uring"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:281:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("io_uring"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:281:27: note: ')' token is here
            return ID2SYM(rb_intern("io_uring"));
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:284:19: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return ID2SYM(rb_intern("unknown"));
                  ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:284:19: note: '{' token is here
    return ID2SYM(rb_intern("unknown"));
                  ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:284:19: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return ID2SYM(rb_intern("unknown"));
                  ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:284:19: note: ')' token is here
    return ID2SYM(rb_intern("unknown"));
                  ^~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:414:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:409:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:293:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock_holder = rb_ivar_get(self, rb_intern("lock_holder"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:293:37: note: '{' token is here
    lock_holder = rb_ivar_get(self, rb_intern("lock_holder"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:293:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock_holder = rb_ivar_get(self, rb_intern("lock_holder"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:293:37: note: ')' token is here
    lock_holder = rb_ivar_get(self, rb_intern("lock_holder"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:296:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        lock = rb_ivar_get(self, rb_intern("lock"));
                                 ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:296:34: note: '{' token is here
        lock = rb_ivar_get(self, rb_intern("lock"));
                                 ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:296:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        lock = rb_ivar_get(self, rb_intern("lock"));
                                 ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:296:34: note: ')' token is here
        lock = rb_ivar_get(self, rb_intern("lock"));
                                 ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:297:26: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(lock, rb_intern("lock"), 0);
                         ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:297:26: note: '{' token is here
        rb_funcall(lock, rb_intern("lock"), 0);
                         ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:297:26: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(lock, rb_intern("lock"), 0);
                         ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:297:26: note: ')' token is here
        rb_funcall(lock, rb_intern("lock"), 0);
                         ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:298:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("lock_holder"), current_thread);
                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:298:27: note: '{' token is here
        rb_ivar_set(self, rb_intern("lock_holder"), current_thread);
                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:298:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("lock_holder"), current_thread);
                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:298:27: note: ')' token is here
        rb_ivar_set(self, rb_intern("lock_holder"), current_thread);
                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:301:26: warning: incompatible function pointer types passing 'VALUE (*)(VALUE *)' (aka 'unsigned long (*)(unsigned long *)') to parameter of type 'VALUE (*)(VALUE)' (aka 'unsigned long (*)(unsigned long)') [-Wincompatible-function-pointer-types]
        return rb_ensure(func, (VALUE)args, NIO_Selector_unlock, self);
                         ^~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1990:24: note: passing argument to parameter here
VALUE rb_ensure(VALUE(*)(VALUE),VALUE,VALUE(*)(VALUE),VALUE);
                       ^
selector.c:313:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:313:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:313:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:313:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:315:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock = rb_ivar_get(self, rb_intern("lock"));
                             ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:315:30: note: '{' token is here
    lock = rb_ivar_get(self, rb_intern("lock"));
                             ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:315:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock = rb_ivar_get(self, rb_intern("lock"));
                             ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:315:30: note: ')' token is here
    lock = rb_ivar_get(self, rb_intern("lock"));
                             ^~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:316:22: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_funcall(lock, rb_intern("unlock"), 0);
                     ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:316:22: note: '{' token is here
    rb_funcall(lock, rb_intern("unlock"), 0);
                     ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:316:22: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_funcall(lock, rb_intern("unlock"), 0);
                     ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:316:22: note: ')' token is here
    rb_funcall(lock, rb_intern("unlock"), 0);
                     ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:344:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:344:37: note: '{' token is here
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:344:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:344:37: note: ')' token is here
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:356:51: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_hash_aset(selectables, rb_funcall(monitor, rb_intern("io"), 0), monitor);
                                                  ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:356:51: note: '{' token is here
    rb_hash_aset(selectables, rb_funcall(monitor, rb_intern("io"), 0), monitor);
                                                  ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:356:51: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_hash_aset(selectables, rb_funcall(monitor, rb_intern("io"), 0), monitor);
                                                  ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:356:51: note: ')' token is here
    rb_hash_aset(selectables, rb_funcall(monitor, rb_intern("io"), 0), monitor);
                                                  ^~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:376:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:376:37: note: '{' token is here
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:376:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:376:37: note: ')' token is here
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:380:29: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(monitor, rb_intern("close"), 1, Qfalse);
                            ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:380:29: note: '{' token is here
        rb_funcall(monitor, rb_intern("close"), 1, Qfalse);
                            ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:380:29: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(monitor, rb_intern("close"), 1, Qfalse);
                            ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:380:29: note: ')' token is here
        rb_funcall(monitor, rb_intern("close"), 1, Qfalse);
                            ^~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:389:43: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:389:43: note: '{' token is here
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:389:43: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:389:43: note: ')' token is here
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:392:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_funcall(selectables, rb_intern("has_key?"), 1, io);
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:392:36: note: '{' token is here
    return rb_funcall(selectables, rb_intern("has_key?"), 1, io);
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:392:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_funcall(selectables, rb_intern("has_key?"), 1, io);
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:392:36: note: ')' token is here
    return rb_funcall(selectables, rb_intern("has_key?"), 1, io);
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:541:43: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:541:43: note: '{' token is here
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:541:43: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:541:43: note: ')' token is here
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:543:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_funcall(selectables, rb_intern("empty?"), 0) == Qtrue ? Qtrue : Qfalse;
                                   ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:543:36: note: '{' token is here
    return rb_funcall(selectables, rb_intern("empty?"), 0) == Qtrue ? Qtrue : Qfalse;
                                   ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1832:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:543:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_funcall(selectables, rb_intern("empty?"), 0) == Qtrue ? Qtrue : Qfalse;
                                   ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1837:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:543:36: note: ')' token is here
    return rb_funcall(selectables, rb_intern("empty?"), 0) == Qtrue ? Qtrue : Qfalse;
                                   ^~~~~~~~~~~~~~~~~~~
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:1847:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/yuuki_haga/.rbenv/versions/2.7.4/include/ruby-2.7.0/ruby/ruby.h:2689:27: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
97 warnings generated.
linking shared-object nio4r_ext.bundle

current directory: /Users/yuuki_haga/Runteq/real_portfolio/regex-hunting/vendor/bundle/ruby/2.7.0/gems/nio4r-2.5.8/ext/nio4r
make "DESTDIR=" install
/usr/bin/install -c -m 0755 nio4r_ext.bundle ./.gem.20211121-88998-pt1ra9
